# This is a basic workflow to help you get started with Actions

name: Windows

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build for windows X64
  build-windows-debug:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    # Setup msbuild
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    # Download and extract precompiled shader conductor lib
    - name: download-extract-shaderconductor
      run: | 
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
    
    # Generate and build sln
    - name: build-sln
      run: |
        @echo | call GenerateVS2019.bat
        msbuild -m Build/ProjectFiles/ZinoEngine.sln /t:build /p:Configuration="Debug" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
    # Build for windows X64
  build-windows-debug-mono:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    # Setup msbuild
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    # Download and extract precompiled shader conductor lib
    - name: download-extract-shaderconductor
      run: | 
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
    
    # Generate and build sln
    - name: build-sln
      run: |
        @echo | call GenerateVS2019.bat
        msbuild -m Build/ProjectFiles/ZinoEngine.sln /t:build /p:Configuration="Debug Monolithic" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
      # Build for windows X64
  build-windows-release:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    # Setup msbuild
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    # Download and extract precompiled shader conductor lib
    - name: download-extract-shaderconductor
      run: | 
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
    
    # Generate and build sln
    - name: build-sln
      run: |
        @echo | call GenerateVS2019.bat
        msbuild -m Build/ProjectFiles/ZinoEngine.sln /t:build /p:Configuration="Release" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
  # Build for windows X64
  build-windows-release-mono:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    # Setup msbuild
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    # Download and extract precompiled shader conductor lib
    - name: download-extract-shaderconductor
      run: | 
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
    
    # Generate and build sln
    - name: build-sln
      run: |
        @echo | call GenerateVS2019.bat
        msbuild -m Build/ProjectFiles/ZinoEngine.sln /t:build /p:Configuration="Release Monolithic" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
      

    # Copy DLLs
    - name: copy-dlls
      run: | 
        @echo | call CopyDLLs.bat
      shell: cmd
      
    # Prepare artifact
    - name: prepare-artifact
      run: |
        mkdir Release
        copy "Binaries\Release Monolithic\*.dll" "Release\*.dll"
        copy "Binaries\Release Monolithic\ZinoEngine.exe" "Release\ZinoEngine.exe"
        xcopy "Assets\*" "Release\Assets\" /E /H
        xcopy "Shaders\*" "Release\Shaders\" /E /H
        powershell Compress-Archive -Path Release\* -DestinationPath ZinoEngine.zip
      shell: cmd
      
    # Generate artifact
    - uses: actions/upload-artifact@v2
      with:
        name: ZinoEngine RM Win64
        path: Release/
    
    # Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly-win"
        prerelease: true
        title: "ZinoEngine RM Windows Nightly"
        files: ZinoEngine.zip