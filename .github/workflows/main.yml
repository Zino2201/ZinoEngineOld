# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 23 * * *'

env:
  vulkan_sdk: C:/VulkanSDK/1.2.148.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build for windows X64
  windows-debug-ed:
    name: Debug Windows (Modular/With Editor)

    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    - name: Install dependencies
      run: |
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.148.1/windows/VulkanSDK-1.2.148.1-Installer.exe
        VulkanSDK.exe /S
        vcpkg install sdl2[*]:x64-windows
      shell: cmd

    - run: | 
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
        
    # Setup msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    # Generate and build sln
    - name: Build
      run: |
        cmake.exe -S . -B Build/ -A x64 -T ClangCL -DZE_MONOLITHIC=OFF -DZE_WITH_EDITOR=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        msbuild -m Build/ZinoEngine.sln /t:build /p:Configuration="Debug" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
  windows-debug-mono-ed:
    name: Debug Windows (Monolithic/With Editor)

    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    - name: Install dependencies
      run: |
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
        curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.148.1/windows/VulkanSDK-1.2.148.1-Installer.exe
        VulkanSDK.exe /S
        vcpkg install sdl2[*]:x64-windows
      shell: cmd

    - run: | 
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/

    # Setup msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    # Generate and build sln
    - name: Build
      run: |
        cmake.exe -S . -B Build/ -A x64 -T ClangCL -DZE_MONOLITHIC=ON -DZE_WITH_EDITOR=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        msbuild -m Build/ZinoEngine.sln /t:build /p:Configuration="Debug" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
  windows-relwithdebinfo-ed:
    name: RelWithDebInfo Windows (Modular/With Editor)
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive

    - name: Install dependencies
      run: |
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
        curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.148.1/windows/VulkanSDK-1.2.148.1-Installer.exe
        VulkanSDK.exe /S
        vcpkg install sdl2[*]:x64-windows
      shell: cmd

    - run: |
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/

    # Setup msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    # Generate and build sln
    - name: Build
      run: |
        cmake.exe -S . -B Build/ -A x64 -T ClangCL -DZE_MONOLITHIC=ON -DZE_WITH_EDITOR=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        msbuild -m Build/ZinoEngine.sln /t:build /p:Configuration="RelWithDebInfo" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
      
    # Prepare artifact
    - name: Prepare artifact
      run: | 
        call Tools/CopyDLLs.bat
        mkdir RelWithDebInfo
        copy "Binaries\RelWithDebInfo\*.dll" "RelWithDebInfo\*.dll"
        copy "Binaries\RelWithDebInfo\ZinoEngine.exe" "RelWithDebInfo\ZinoEngine.exe"
        xcopy "Assets\*" "RelWithDebInfo\Assets\" /E /H
        xcopy "Shaders\*" "RelWithDebInfo\Shaders\" /E /H
      shell: cmd
      
     # Generate artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ZinoEngine RelWithDebInfo Modular Editor Win64
        path: RelWithDebInfo/
  windows-release-mono-noed:
    name: Release Windows (Monolithic/No Editor)

    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
          submodules: recursive
    
    - name: Install dependencies
      run: |
        cd ${{ github.workspace }}
        curl https://dl.dropboxusercontent.com/s/vn0js0up6hujz8m/Build.zip?dl=1 --output Build.zip
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/
        curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.148.1/windows/VulkanSDK-1.2.148.1-Installer.exe
        VulkanSDK.exe /S
        vcpkg install sdl2[*]:x64-windows
      shell: cmd

    - run: |
        Expand-Archive -Force Build.zip ${{ github.workspace }}/Sources/Libs/ShaderConductor/

    # Setup msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    # Generate and build sln
    - name: Build
      run: |
        cmake.exe -S . -B Build/ -A x64 -T ClangCL -DZE_MONOLITHIC=ON -DZE_WITH_EDITOR=OFF -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        msbuild -m Build/ZinoEngine.sln /t:build /p:Configuration="Release" /p:Platform="x64" /p:BuildInParallel=true
      shell: cmd
  # Release
  build-nightly-win:
    if: ${{ github.event_name == 'schedule' }}
    name: Build Nightly Windows
    runs-on: windows-2019
    needs: [windows-debug-ed, windows-debug-mono-ed, windows-relwithdebinfo-ed, windows-release-mono-noed]
    
    steps:
    
    # Download artifact
    - uses: actions/download-artifact@v2
      with:
        name: ZinoEngine RelWithDebInfo Modular Editor Win64
        path: RelWithDebInfo/
      
    # Zip
    - run: |
        powershell Compress-Archive -Path RelWithDebInfoEd\* -DestinationPath ZinoEngine-Editor-RelWithDebInfo.zip
    
    # Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly-win"
        prerelease: true
        title: "ZinoEngine Windows Nightly"
        files: | 
            ZinoEngine-Editor-RelWithDebInfo.zip
    